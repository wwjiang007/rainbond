// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TaskMessage struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskType             string   `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	TaskBody             []byte   `protobuf:"bytes,3,opt,name=task_body,json=taskBody,proto3" json:"task_body,omitempty"`
	CreateTime           string   `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	User                 string   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskMessage) Reset()         { *m = TaskMessage{} }
func (m *TaskMessage) String() string { return proto.CompactTextString(m) }
func (*TaskMessage) ProtoMessage()    {}
func (*TaskMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *TaskMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskMessage.Unmarshal(m, b)
}
func (m *TaskMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskMessage.Marshal(b, m, deterministic)
}
func (m *TaskMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskMessage.Merge(m, src)
}
func (m *TaskMessage) XXX_Size() int {
	return xxx_messageInfo_TaskMessage.Size(m)
}
func (m *TaskMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TaskMessage proto.InternalMessageInfo

func (m *TaskMessage) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TaskMessage) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *TaskMessage) GetTaskBody() []byte {
	if m != nil {
		return m.TaskBody
	}
	return nil
}

func (m *TaskMessage) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *TaskMessage) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type EnqueueRequest struct {
	Topic                string       `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Message              *TaskMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EnqueueRequest) Reset()         { *m = EnqueueRequest{} }
func (m *EnqueueRequest) String() string { return proto.CompactTextString(m) }
func (*EnqueueRequest) ProtoMessage()    {}
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *EnqueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnqueueRequest.Unmarshal(m, b)
}
func (m *EnqueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnqueueRequest.Marshal(b, m, deterministic)
}
func (m *EnqueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnqueueRequest.Merge(m, src)
}
func (m *EnqueueRequest) XXX_Size() int {
	return xxx_messageInfo_EnqueueRequest.Size(m)
}
func (m *EnqueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnqueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnqueueRequest proto.InternalMessageInfo

func (m *EnqueueRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *EnqueueRequest) GetMessage() *TaskMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type DequeueRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ClientHost           string   `protobuf:"bytes,2,opt,name=client_host,json=clientHost,proto3" json:"client_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DequeueRequest) Reset()         { *m = DequeueRequest{} }
func (m *DequeueRequest) String() string { return proto.CompactTextString(m) }
func (*DequeueRequest) ProtoMessage()    {}
func (*DequeueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *DequeueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DequeueRequest.Unmarshal(m, b)
}
func (m *DequeueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DequeueRequest.Marshal(b, m, deterministic)
}
func (m *DequeueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DequeueRequest.Merge(m, src)
}
func (m *DequeueRequest) XXX_Size() int {
	return xxx_messageInfo_DequeueRequest.Size(m)
}
func (m *DequeueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DequeueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DequeueRequest proto.InternalMessageInfo

func (m *DequeueRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *DequeueRequest) GetClientHost() string {
	if m != nil {
		return m.ClientHost
	}
	return ""
}

type TaskReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Topics               []string `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskReply) Reset()         { *m = TaskReply{} }
func (m *TaskReply) String() string { return proto.CompactTextString(m) }
func (*TaskReply) ProtoMessage()    {}
func (*TaskReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *TaskReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskReply.Unmarshal(m, b)
}
func (m *TaskReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskReply.Marshal(b, m, deterministic)
}
func (m *TaskReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskReply.Merge(m, src)
}
func (m *TaskReply) XXX_Size() int {
	return xxx_messageInfo_TaskReply.Size(m)
}
func (m *TaskReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskReply.DiscardUnknown(m)
}

var xxx_messageInfo_TaskReply proto.InternalMessageInfo

func (m *TaskReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TaskReply) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type TopicRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicRequest) Reset()         { *m = TopicRequest{} }
func (m *TopicRequest) String() string { return proto.CompactTextString(m) }
func (*TopicRequest) ProtoMessage()    {}
func (*TopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

func (m *TopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicRequest.Unmarshal(m, b)
}
func (m *TopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicRequest.Marshal(b, m, deterministic)
}
func (m *TopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicRequest.Merge(m, src)
}
func (m *TopicRequest) XXX_Size() int {
	return xxx_messageInfo_TopicRequest.Size(m)
}
func (m *TopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TopicRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TaskMessage)(nil), "pb.TaskMessage")
	proto.RegisterType((*EnqueueRequest)(nil), "pb.EnqueueRequest")
	proto.RegisterType((*DequeueRequest)(nil), "pb.DequeueRequest")
	proto.RegisterType((*TaskReply)(nil), "pb.TaskReply")
	proto.RegisterType((*TopicRequest)(nil), "pb.TopicRequest")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0x45, 0x9b, 0x3e, 0x12, 0x32, 0x7d, 0x80, 0x46, 0x08, 0xac, 0xb2, 0xa0, 0xf2, 0xaa, 0x08,
	0x29, 0x42, 0xe5, 0x0f, 0x10, 0x08, 0x58, 0xb0, 0x68, 0x14, 0xd6, 0x55, 0xd2, 0x8c, 0x20, 0xea,
	0xc3, 0x6e, 0xed, 0x2c, 0xf2, 0x21, 0x6c, 0xf8, 0x5a, 0x64, 0x3b, 0xad, 0x5a, 0xd8, 0xb0, 0xf3,
	0xcc, 0xcd, 0xcc, 0x9c, 0x7b, 0x15, 0xe8, 0xaf, 0x48, 0xa9, 0xf4, 0x83, 0x22, 0xb9, 0x15, 0x5a,
	0x60, 0x53, 0x66, 0xfc, 0xcb, 0x83, 0x6e, 0x92, 0xaa, 0xc5, 0x9b, 0x53, 0xf0, 0x12, 0x02, 0x9d,
	0xaa, 0xc5, 0xac, 0xc8, 0x99, 0x37, 0xf2, 0xc6, 0x61, 0xec, 0x9b, 0xf2, 0x35, 0xc7, 0x2b, 0x08,
	0xad, 0xa0, 0x2b, 0x49, 0xac, 0x69, 0xa5, 0x13, 0xd3, 0x48, 0x2a, 0x49, 0x7b, 0x31, 0x13, 0x79,
	0xc5, 0x5a, 0x23, 0x6f, 0xdc, 0x73, 0xe2, 0x83, 0xc8, 0x2b, 0xbc, 0x86, 0xee, 0x7c, 0x4b, 0xa9,
	0xa6, 0x99, 0x2e, 0x56, 0xc4, 0xda, 0x76, 0x16, 0x5c, 0x2b, 0x29, 0x56, 0x84, 0x08, 0xed, 0x52,
	0xd1, 0x96, 0x75, 0xac, 0x62, 0xdf, 0x7c, 0x0a, 0x83, 0xa7, 0xf5, 0xa6, 0xa4, 0x92, 0x62, 0xda,
	0x94, 0xa4, 0x34, 0x9e, 0x43, 0x47, 0x0b, 0x59, 0xcc, 0x6b, 0x2e, 0x57, 0xe0, 0x0d, 0x04, 0xb5,
	0x29, 0x0b, 0xd5, 0x9d, 0x9c, 0x46, 0x32, 0x8b, 0x0e, 0x1c, 0xc5, 0x3b, 0x9d, 0x3f, 0xc3, 0xe0,
	0x91, 0xfe, 0xb1, 0xd2, 0xf0, 0x2e, 0x0b, 0x5a, 0xeb, 0xd9, 0xa7, 0x50, 0xba, 0xf6, 0x0a, 0xae,
	0xf5, 0x22, 0x94, 0xe6, 0xef, 0x10, 0x9a, 0x03, 0x31, 0xc9, 0x65, 0x85, 0x17, 0xe0, 0x2b, 0x9d,
	0xea, 0x52, 0xed, 0xf2, 0x72, 0x15, 0xb2, 0x63, 0xb0, 0x70, 0xcf, 0x61, 0x26, 0xec, 0x21, 0xc5,
	0x5a, 0xa3, 0x96, 0x4d, 0xd8, 0x56, 0x7c, 0x00, 0xbd, 0xc4, 0xbc, 0x6a, 0xba, 0xc9, 0xb7, 0xe7,
	0xee, 0x4c, 0x0d, 0x32, 0x46, 0x10, 0xd4, 0x81, 0x20, 0x1a, 0x8b, 0xc7, 0xe9, 0x0c, 0xfb, 0x3b,
	0xdb, 0x96, 0x8a, 0x37, 0xf0, 0x16, 0x7c, 0xbb, 0x4d, 0xe1, 0x99, 0x95, 0x0e, 0x36, 0xff, 0xfd,
	0xf8, 0x0e, 0x82, 0x3a, 0x1a, 0xb7, 0xfc, 0x38, 0xa7, 0xe1, 0xef, 0x4c, 0x79, 0x23, 0xf3, 0xed,
	0x2f, 0x74, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x5f, 0x1b, 0x28, 0x53, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskQueueClient is the client API for TaskQueue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskQueueClient interface {
	Enqueue(ctx context.Context, in *EnqueueRequest, opts ...grpc.CallOption) (*TaskReply, error)
	Topics(ctx context.Context, in *TopicRequest, opts ...grpc.CallOption) (*TaskReply, error)
	Dequeue(ctx context.Context, in *DequeueRequest, opts ...grpc.CallOption) (*TaskMessage, error)
}

type taskQueueClient struct {
	cc *grpc.ClientConn
}

func NewTaskQueueClient(cc *grpc.ClientConn) TaskQueueClient {
	return &taskQueueClient{cc}
}

func (c *taskQueueClient) Enqueue(ctx context.Context, in *EnqueueRequest, opts ...grpc.CallOption) (*TaskReply, error) {
	out := new(TaskReply)
	err := c.cc.Invoke(ctx, "/pb.TaskQueue/Enqueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskQueueClient) Topics(ctx context.Context, in *TopicRequest, opts ...grpc.CallOption) (*TaskReply, error) {
	out := new(TaskReply)
	err := c.cc.Invoke(ctx, "/pb.TaskQueue/Topics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskQueueClient) Dequeue(ctx context.Context, in *DequeueRequest, opts ...grpc.CallOption) (*TaskMessage, error) {
	out := new(TaskMessage)
	err := c.cc.Invoke(ctx, "/pb.TaskQueue/Dequeue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskQueueServer is the server API for TaskQueue service.
type TaskQueueServer interface {
	Enqueue(context.Context, *EnqueueRequest) (*TaskReply, error)
	Topics(context.Context, *TopicRequest) (*TaskReply, error)
	Dequeue(context.Context, *DequeueRequest) (*TaskMessage, error)
}

func RegisterTaskQueueServer(s *grpc.Server, srv TaskQueueServer) {
	s.RegisterService(&_TaskQueue_serviceDesc, srv)
}

func _TaskQueue_Enqueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnqueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskQueueServer).Enqueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TaskQueue/Enqueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskQueueServer).Enqueue(ctx, req.(*EnqueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskQueue_Topics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskQueueServer).Topics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TaskQueue/Topics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskQueueServer).Topics(ctx, req.(*TopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskQueue_Dequeue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DequeueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskQueueServer).Dequeue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TaskQueue/Dequeue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskQueueServer).Dequeue(ctx, req.(*DequeueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskQueue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TaskQueue",
	HandlerType: (*TaskQueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enqueue",
			Handler:    _TaskQueue_Enqueue_Handler,
		},
		{
			MethodName: "Topics",
			Handler:    _TaskQueue_Topics_Handler,
		},
		{
			MethodName: "Dequeue",
			Handler:    _TaskQueue_Dequeue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
